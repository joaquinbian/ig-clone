type Like @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  postID: ID!
    @index(
      name: "byPost"
      queryField: "likeForPostByUserId"
      sortKeyFields: ["userID"]
    )
  User: User @belongsTo(fields: ["userID"])
  Post: Post @belongsTo(fields: ["postID"])
}

type CommentLike @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  commentID: ID!
    @index(
      name: "byComment"
      queryField: "likeForCommentByUserId"
      sortKeyFields: ["userID"]
    )
  User: User @belongsTo(fields: ["userID"])
  Comment: Comment @belongsTo(fields: ["commentID"])
}

type Comment @model @auth(rules: [{allow: public}]) {
  id: ID!
  comment: String!
  createdAt: AWSDateTime!
  userID: ID! @index(name: "byUser")
  postID: ID!
    @index(
      name: "byPost"
      queryField: "getCommentsByPost"
      sortKeyFields: ["createdAt"]
    )
  numberOfLikes: Int!
  User: User @belongsTo(fields: ["userID"])
  Post: Post @belongsTo(fields: ["postID"])
  CommentLikes: [CommentLike] @hasMany(indexName: "byComment", fields: ["id"])
}

type Post @model @auth(rules: [{allow: public}]) {
  id: ID!
  description: String
  createdAt: AWSDateTime!
  type: String!
    @index(
      name: "postByDate"
      queryField: "getPostsByDate"
      sortKeyFields: ["createdAt"]
    )
  image: String
  images: [String!]
  video: String
  numberOfComments: Int!
  numberOfLikes: Int!
  userID: ID! @index(name: "byUser")
  untitledfield: String
  User: User @belongsTo(fields: ["userID"])
  Likes: [Like] @hasMany(indexName: "byPost", fields: ["id"])
  Comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String
  bio: String
  username: String
    @index(name: "usersByUsername", queryField: "usersByUsername")
  website: AWSURL
  email: String!
  numberOfPosts: Int!
  numberOfFollowers: Int!
  numberOfFollowings: Int!
  Posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  Likes: [Like] @hasMany(indexName: "byUser", fields: ["id"])
  Comments: [Comment] @hasMany(indexName: "byUser", fields: ["id"])
  CommentLikes: [CommentLike] @hasMany(indexName: "byUser", fields: ["id"])
}
